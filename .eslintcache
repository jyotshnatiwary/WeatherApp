[{"C:\\Users\\hp\\Desktop\\Dentsu project\\weather-app\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\Dentsu project\\weather-app\\src\\reportWebVitals.js":"2","C:\\Users\\hp\\Desktop\\Dentsu project\\weather-app\\src\\App.js":"3","C:\\Users\\hp\\Desktop\\Dentsu project\\weather-app\\src\\weatherInfo.js":"4","C:\\Users\\hp\\Desktop\\Dentsu project\\weather-app\\src\\Search.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":4083,"mtime":1631635025985,"results":"9","hashOfConfig":"7"},{"size":2441,"mtime":1631498989059,"results":"10","hashOfConfig":"7"},{"size":2457,"mtime":1631643567858,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"v8tgqr",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"14"},"C:\\Users\\hp\\Desktop\\Dentsu project\\weather-app\\src\\index.js",[],["27","28"],"C:\\Users\\hp\\Desktop\\Dentsu project\\weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\hp\\Desktop\\Dentsu project\\weather-app\\src\\App.js",["29","30","31"],"import React, { Component } from 'react'\nimport './App.css';\nimport Clock from 'react-live-clock';\nimport WeatherInfo from './weatherInfo'\nimport Search from './Search.js';\n\nclass App extends React.Component {\n  state = {\n    latitude: null,\n    longitude: null,\n    temp: null,\n    locationName: null,\n    country: null,\n    humidity: null,\n    visiblity: null,\n    windSpeed: null,\n    feelsLike: null,\n    maxTemp: null,\n    weatherName: null,\n    LocationMode: null\n  }\n  receiveData = async (val) => {\n    const data = val.data;\n    console.log(this.state);\n    this.setState(\n      {\n        temp: Math.round(data.main.temp),\n        locationName: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        visiblity: data.visibility,\n        windSpeed: data.wind.speed,\n        feelsLike: data.main.feels_like,\n        maxTemp: data.main.temp_max,\n        weatherName: data.weather[0].main,\n        LocationMode: true,\n        latitude:data.coord.lat,\n        longitude:data.coord.long\n      }\n    )\n    console.log(this.state);\n  }\n  componentDidMount() {\n    if (navigator.geolocation) {\n      this.getPostions()\n        .then((position) => {\n          console.log(position.coords.latitude, position.coords.longitude);\n          // this.setState({latitude: position.coords.latitude})\n          this.getWeather(position.coords.latitude, position.coords.longitude)\n          this.state.LocationMode = true; \n          console.log('nererer', this.state.LocationMode)\n        })\n        .catch((err) => {\n          this.state.LocationMode = false; \n          console.log('nererer', this.state.LocationMode)\n        }\n        )\n    }\n\n  }\n  getPostions = () => {\n    return new Promise(function (resolve, reject) {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n  };\n  getWeather = async (latitude, longitude) => {\n    const api = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=c0d573b18729da9019711dcbacf8458d`\n    );\n    const data = await api.json();\n    console.log(data)\n    this.setState(\n      {\n        temp: Math.round(data.main.temp),\n        locationName: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        visiblity: data.visibility,\n        windSpeed: data.wind.speed,\n        feelsLike: data.main.feels_like,\n        maxTemp: data.main.temp_max,\n        weatherName: data.weather[0].main\n      }\n    )\n  }\n  // render() {\n  //   if (true) {\n  //     return (\n  //       <div>hyy</div>\n  //     )\n  //   }\n  // }\n  render() {\n    if (this.state.LocationMode) {\n      return (\n        <React.Fragment>\n          <div className=\"col-8 d-flex justify-content-center py-5  \">\n            <div className=\"col-6 app-bg d-flex flex-wrap py-3\">\n              <div className=\"col-12\">\n                <h2 className=\"text-white m-0\">{(this.state.locationName)}</h2>\n                <p className=\"text-white\">{(this.state.country)}</p>\n              </div>\n              <div className=\"col-12 mt-auto d-flex\">\n                <div className=\"my-auto\">\n                  <h2 className=\"text-white m-0 \">\n                    <Clock format={'HH:mm:ss'} ticking={true} />\n                  </h2>\n                  <p className=\"text-white m-0\">\n                    <Clock\n                      date={''}\n                      format={'dddd, MMMM DD, YYYY'} />\n                  </p>\n                </div>\n                <div className=\"ml-auto\">\n                  <h1 className=\"text-white\">{(this.state.temp)}°C</h1>\n                </div>\n              </div>\n            </div>\n            <WeatherInfo humidity={this.state.humidity} visiblity={this.state.visiblity} windSpeed={this.state.windSpeed} feelsLike={this.state.feelsLike} maxTemp={this.state.maxTemp} weatherName={this.state.weatherName} />\n          </div>\n        </React.Fragment>\n      );\n    }\n  \n  else {\n  return (\n    <React.Fragment>\n      <Search sendData={this.receiveData}/>\n    </React.Fragment>\n  );\n}\n}\n}\n\nexport default App;","C:\\Users\\hp\\Desktop\\Dentsu project\\weather-app\\src\\weatherInfo.js",["32"],"import React from 'react'\r\n\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\nconst defaults = {\r\n    icon: 'CLEAR_DAY',\r\n    color: 'white',\r\n    size: 100,\r\n    animate: true\r\n  };\r\nfunction WeatherInfo(props) {\r\n    var weatherIcon = null;\r\n    switch(props.weatherName){\r\n        case \"Haze\":\r\n        weatherIcon = 'CLOUDY';\r\n        break;\r\n        case \"Rain\":\r\n        weatherIcon = 'RAIN';\r\n        break;\r\n        case \"RAIN\":\r\n        weatherIcon = 'CLOUDY'\r\n        default:\r\n        weatherIcon = 'CLEAR_DAY'  \r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"col-4 side-bg text-center py-3\">\r\n                <ReactAnimatedWeather\r\n                    icon={weatherIcon}\r\n                    color={defaults.color}\r\n                    size={defaults.size}\r\n                    animate={defaults.animate}\r\n                />\r\n                <h2 className=\"text-white py-2\">{props.weatherName}</h2>\r\n                <div className=\"d-flex flex-wrap\">\r\n                    <div className=\"d-flex col-12 py-1\">\r\n                        <div className=\"text-white\"><strong>Humidity</strong></div>\r\n                        <div className=\"text-white ml-auto\">{props.humidity}%</div>\r\n                    </div>\r\n                    <div className=\"d-flex col-12 py-1\">\r\n                        <div className=\"text-white\"><strong>Visiblity</strong></div>\r\n                        <div className=\"text-white ml-auto\">{props.visiblity} mi</div>\r\n                    </div>\r\n                    <div className=\"d-flex col-12 py-1\">\r\n                        <div className=\"text-white\"><strong>Wind Speed</strong></div>\r\n                        <div className=\"text-white ml-auto\">{props.windSpeed} Km/h</div>\r\n                    </div>\r\n                    <div className=\"d-flex col-12 py-1\">\r\n                        <div className=\"text-white\"><strong>Feels Like</strong></div>\r\n                        <div className=\"text-white ml-auto\">{props.feelsLike}°C</div>\r\n                    </div>\r\n                    <div className=\"d-flex col-12 py-1\">\r\n                        <div className=\"text-white\"><strong>Max Temp</strong></div>\r\n                        <div className=\"text-white ml-auto\">{props.maxTemp}°C</div>\r\n                    </div>\r\n\r\n                   \r\n    \r\n\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default WeatherInfo;",["33","34"],"C:\\Users\\hp\\Desktop\\Dentsu project\\weather-app\\src\\Search.js",["35","36","37","38"],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport './mySearch.css'\r\n// import { Button } from 'react-bootstrap'\r\n// import { index } from '@babel/types' \r\nconst Search = (props) => {\r\n    const [city, setCity] = useState(\"\");\r\n    const [country, setCountry] = useState(\"\");\r\n    const [temp, setTemp] = useState(\"\");\r\n    const [min, setMin] = useState(\"\");\r\n    const [max, setMax] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [icon, setIcon] = useState(\"\");\r\n    const [showMyComponent, setShowMyComponent] = useState(\"\");\r\n\r\n\r\n    const getWeatherData = async (city, country) => {\r\n        console.log(city, country);\r\n        await axios({\r\n            method: 'GET',\r\n            url: `https://api.openweathermap.org/data/2.5/weather?q=${city},${country},&appid=f4b372960c5401bff12c77e94d4a943a`\r\n        }).then((res) => {\r\n            console.log(res.data);\r\n            setTemp(res.data.main.temp - 273.15);\r\n            setIcon(res.data.weather[0].icon);\r\n            setMin(res.data.main.temp - min - 273.15);\r\n            setDescription(res.data.weather[0].description);\r\n            setMax(res.data.main.temp - max - 273.15);\r\n            setCountry(res.data.sys.country);\r\n            setShowMyComponent(true);\r\n            sendData(res);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    function sendData(res) {\r\n        props.sendData(res);\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"col-6 app-bg d-flex flex-wrap py-3\">\r\n            <div className=\"col-12\">\r\n                <h2 className=\"text-white m-0\">Please allow Location access</h2>\r\n            </div>\r\n\r\n            <div\r\n                className=\"CityName\">\r\n                <input type=\"text\"\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                    placeholder=\"cityname\" />\r\n\r\n            </div>\r\n            <div\r\n                className=\"CountryName\">\r\n                <input type=\"text\"\r\n                    value={country}\r\n                    onChange={(e) => setCountry(e.target.value)}\r\n                    placeholder=\"countryCode\" />\r\n            </div>\r\n\r\n\r\n\r\n            <div>\r\n                <button onClick={(e) => getWeatherData(city, country)}\r\n                    className=\"searchButton\"> Get Weather</button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Search\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":26},{"ruleId":"47","severity":1,"message":"48","line":50,"column":11,"nodeType":"49","endLine":50,"endColumn":21},{"ruleId":"47","severity":1,"message":"48","line":54,"column":11,"nodeType":"49","endLine":54,"endColumn":21},{"ruleId":"50","severity":1,"message":"51","line":21,"column":9,"nodeType":"52","messageId":"53","endLine":22,"endColumn":34},{"ruleId":"39","replacedBy":"54"},{"ruleId":"41","replacedBy":"55"},{"ruleId":"43","severity":1,"message":"56","line":9,"column":12,"nodeType":"45","messageId":"46","endLine":9,"endColumn":16},{"ruleId":"43","severity":1,"message":"57","line":12,"column":12,"nodeType":"45","messageId":"46","endLine":12,"endColumn":23},{"ruleId":"43","severity":1,"message":"58","line":13,"column":12,"nodeType":"45","messageId":"46","endLine":13,"endColumn":16},{"ruleId":"43","severity":1,"message":"59","line":14,"column":12,"nodeType":"45","messageId":"46","endLine":14,"endColumn":27},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default",["60"],["61"],"'temp' is assigned a value but never used.","'description' is assigned a value but never used.","'icon' is assigned a value but never used.","'showMyComponent' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]